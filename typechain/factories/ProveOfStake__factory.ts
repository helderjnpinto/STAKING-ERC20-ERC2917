/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ProveOfStake } from "../ProveOfStake";

export class ProveOfStake__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _interestsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProveOfStake> {
    return super.deploy(
      _interestsToken,
      overrides || {}
    ) as Promise<ProveOfStake>;
  }
  getDeployTransaction(
    _interestsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_interestsToken, overrides || {});
  }
  attach(address: string): ProveOfStake {
    return super.attach(address) as ProveOfStake;
  }
  connect(signer: Signer): ProveOfStake__factory {
    return super.connect(signer) as ProveOfStake__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProveOfStake {
    return new Contract(address, _abi, signerOrProvider) as ProveOfStake;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_interestsToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "incNounce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "interestsToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nounce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakePool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109043803806109048339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061086f806100956000396000f3fe6080604052600436106100705760003560e01c80633a4b66f11161004e5780633a4b66f1146101545780635808b75b14610172578063616d246314610189578063aed36f2b146101b457610070565b8063101d47051461007557806318160ddd146100da5780632e17de7814610105575b600080fd5b34801561008157600080fd5b506100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f5565b6040518082815260200191505060405180910390f35b3480156100e657600080fd5b506100ef61020d565b6040518082815260200191505060405180910390f35b34801561011157600080fd5b5061013e6004803603602081101561012857600080fd5b8101908080359060200190929190505050610213565b6040518082815260200191505060405180910390f35b61015c610503565b6040518082815260200191505060405180910390f35b34801561017e57600080fd5b506101876106f4565b005b34801561019557600080fd5b5061019e610707565b6040518082815260200191505060405180910390f35b3480156101c057600080fd5b506101c961070d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60026020528060005260406000206000915090505481565b60035481565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f494e53554646494349454e5420414d4f554e542e00000000000000000000000081525060200191505060405180910390fd5b60008211610340576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f494e56414c494420414d4f554e542e000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef693bed33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156103d357600080fd5b505af11580156103e7573d6000803e3d6000fd5b505050506040513d60208110156103fd57600080fd5b81019080805190602001909291905050505061046182600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461073390919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156104ea573d6000803e3d6000fd5b5081905080600360008282540392505081905550919050565b600080341161057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f494e56414c494420414d4f554e542e000000000000000000000000000000000081525060200191505060405180910390fd5b6105cc34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107b690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e348b7d33346040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106a257600080fd5b505af11580156106b6573d6000803e3d6000fd5b505050506040513d60208110156106cc57600080fd5b8101908080519060200190929190505050503490508060036000828254019250508190555090565b6000808154809291906001019190505550565b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282840391508111156107b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284019150811015610833576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea2646970667358221220cc41b759b6b8a9da80a1bbb96260126c5a6ffd0686fc2ce66b6de48228cffd1d64736f6c63430007000033";
